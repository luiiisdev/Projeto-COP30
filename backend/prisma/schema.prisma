generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  avatar    String?  // URL da foto de perfil (opcional)
  books     Book[]
  orders    Order[]  // Relação para pedidos
  createdAt DateTime @default(now())

  // Relação para conversas
  buyerConversations  Conversation[] @relation("BuyerConversations")
  sellerConversations Conversation[] @relation("SellerConversations")
  messages            Message[]
}

model Book {
  id        Int      @id @default(autoincrement())
  title     String
  author    String
  type      String   // "doacao" ou "venda"
  price     Float?   // só se for venda
  contact   String?
  image     String?
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  createdAt DateTime @default(now())
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  date        DateTime
  description String?
  createdAt   DateTime @default(now())
}

model News {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  publishedAt DateTime @default(now())
}

model Order {
  id              Int        @id @default(autoincrement())
  userId          Int
  user            User       @relation(fields: [userId], references: [id])
  shippingAddress String
  totalAmount     Float
  status          String     @default("PENDING") // PENDING, PROCESSING, SHIPPED, DELIVERED
  orderDate       DateTime   @default(now())
  items           OrderItem[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  orderId    Int
  order      Order   @relation(fields: [orderId], references: [id])
  bookId     Int
  bookName   String
  bookAuthor String?    // agora é opcional
  bookImage  String?    // agora é opcional
  quantity   Int
  price      Float
}

// --- Novas tabelas de conversas ---
model Conversation {
  id         Int       @id @default(autoincrement())
  buyerId    Int
  buyer      User      @relation("BuyerConversations", fields: [buyerId], references: [id])
  sellerId   Int
  seller     User      @relation("SellerConversations", fields: [sellerId], references: [id])
  messages   Message[]
  createdAt  DateTime  @default(now())
}

model Message {
  id             Int          @id @default(autoincrement())
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  senderId       Int
  sender         User         @relation(fields: [senderId], references: [id])
  content        String
  createdAt      DateTime     @default(now())
}
